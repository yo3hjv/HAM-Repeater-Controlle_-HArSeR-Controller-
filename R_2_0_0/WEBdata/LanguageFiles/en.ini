[System]
callsign=YO3HJV

[UI]
pageTitle=ESP32 Repeater Controller
homepage-title=Repeater Status
settings-title=Repeater Settings
about-title=About ESP32 Repeater Controller
repeater-lock-control=Repeater Lock Control
unlocked=UNLOCKED
locked=LOCKED
warning=Warning:
lock-warning=When locked, the repeater will not transmit and will only send the locked beacon message.
operational-status=Operational Status
current-mode=Current Mode:
tot-status=Time-out Timer:
normal=Normal
enabled=Enabled
disabled=Disabled
sending-beacon=Sending beacon...
beacon-sent=Beacon sent successfully!
beacon-error=Error sending beacon
beacon-format=Beacon Format is: [Callsign] + [Delay] + [End Message]

[navigation]
home=Home
settings=Settings
about=About
send_beacon=Send Beacon
switch_ap=Switch to AP
upload_files=Upload Files

[status]
active=Active
inactive=Inactive
repeater-status=Repeater Status
repeater-state=Repeater State
rssi-level=RSSI Level
carrier-detect=Carrier Detect
ptt-status=PTT Status
wifi-status=WiFi Status
wifi-mode=WiFi Mode
ssid=SSID
ip-address=IP Address
signal-strength=Signal Strength
system-info=System Information
uptime=Uptime
free-memory=Free Memory
firmware-version=Firmware Version

[settings]
hardware-settings=Hardware Settings
lcd-enabled=LCD Display
enabled=Enabled
disabled=Disabled
lcd-address=LCD I2C Address
lcd-address-help=Hexadecimal address (e.g., 0x27)
beacon-pin=Beacon Pin
courtesy-pin=Courtesy Tone Pin
tail-pin=Tail Tone Pin

rssi-settings=RSSI Hysteresis Settings
rssi-threshold=RSSI Threshold
rssi-threshold-help=ADC value (0-4095) to trigger carrier detect
rssi-hysteresis=RSSI Hysteresis
rssi-hysteresis-help=Hysteresis value to prevent oscillation

timing-settings=Timing Settings
hang-time=Hang Time (ms)
hang-time-help=Time to keep PTT active after carrier drops
timeout=Timeout (sec)
timeout-help=Maximum transmission time before timeout
timeout-penalty=Timeout Penalty (sec)
timeout-penalty-help=Lockout time after timeout

beacon-settings=Beacon Settings
beacon-text=Beacon Text
beacon-interval=Beacon Interval (min)
beacon-interval-help=0 = disabled, otherwise minutes between beacons
beacon-speed=CW Speed (WPM)
beacon-tone=CW Tone (Hz)

courtesy-settings=Courtesy Tone Settings
courtesy-enabled=Courtesy Tone
courtesy-tone=Tone Frequency (Hz)
courtesy-duration=Duration (ms)

tail-settings=Tail Tone Settings
tail-enabled=Tail Tone
tail-tone=Tone Frequency (Hz)
tail-duration=Duration (ms)

wifi-settings=WiFi Settings
ap-ssid=AP SSID
ap-password=AP Password
ap-password-help=Leave empty for open network or enter at least 8 characters

callsign-settings=Callsign Settings
callsign=Callsign

save-settings=Save Settings
download-settings=Download Settings
reset-form=Reset Form

[about]
about-project=About the Project
about-description=The ESP32 Repeater Controller is an open-source project designed to provide a flexible, feature-rich controller for amateur radio repeaters. Built on the ESP32 platform, it offers WiFi connectivity, web-based configuration, and comprehensive repeater control features.
about-features=Key features include:
feature-rssi=RSSI-based carrier detection with adjustable hysteresis
feature-timing=Configurable hang time and timeout settings
feature-beacon=Automatic CW beacon with customizable text and timing
feature-tones=Courtesy and tail tone generation
feature-wifi=WiFi connectivity with both AP and STA modes
feature-web=Web-based configuration interface
feature-lcd=Optional LCD display support
github-info=This project is maintained on GitHub. For the latest updates, documentation, and to contribute:
github-link=GitHub Repository

settings-explanation=Settings Explanation
rssi-section=RSSI Hysteresis
rssi-explanation=The RSSI (Received Signal Strength Indicator) settings control how the repeater detects incoming signals. The threshold determines the minimum signal level required to trigger the repeater, while the hysteresis prevents rapid on/off cycling when signals are near the threshold.
timing-section=Timing Settings
timing-explanation=Hang Time: The period the repeater remains active after the input signal disappears. Timeout: Maximum transmission time allowed before the repeater temporarily disables. Timeout Penalty: The duration the repeater remains disabled after a timeout occurs.
beacon-section=Beacon Settings
beacon-explanation=The beacon automatically transmits your callsign or other identification at regular intervals. You can customize the message text, transmission interval, CW speed, and tone frequency. Setting the interval to 0 disables automatic beacons.
courtesy-section=Courtesy Tone
courtesy-explanation=The courtesy tone plays briefly when a transmission ends and the hang time begins. It signals to users that the repeater is ready for another transmission.
tail-section=Tail Tone
tail-explanation=The tail tone plays at the end of the hang time, just before the repeater deactivates. It signals that the repeater is about to go into standby mode.

hardware-info=Hardware Information
connections-title=Connections
pin=ESP32 Pin
function=Function
description=Description
rssi-input=RSSI Input
rssi-input-desc=Analog input for receiver signal strength
ptt-output=PTT Output
ptt-output-desc=Controls transmitter PTT
audio-output=Audio Output
audio-output-desc=For tones and beacon
i2c-sda=I2C SDA
i2c-sda-desc=For LCD display
i2c-scl=I2C SCL
i2c-scl-desc=For LCD display

hardware-requirements=Hardware Requirements
esp32=ESP32 development board
lcd-optional=Optional: I2C LCD display (16x2 or 20x4)
interface-circuit=Interface circuit for connecting to radio equipment
power-supply=Stable power supply

credits=Credits
developed-by=Developed by Adrian YO3HJV
contributors=Contributors:
license=This project is open source and available under the MIT License.
